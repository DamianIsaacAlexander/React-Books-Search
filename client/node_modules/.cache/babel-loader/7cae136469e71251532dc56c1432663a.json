{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Damian\\\\Documents\\\\WebDev Practice\\\\React_Books_Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Damian\\\\Documents\\\\WebDev Practice\\\\React_Books_Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Damian\\\\Documents\\\\WebDev Practice\\\\React_Books_Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport API from \"../utils/API\";\n\nvar search = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query, index) {\n    var _yield$API$searchBook, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return API.searchBook(query, index);\n\n          case 2:\n            _yield$API$searchBook = _context.sent;\n            data = _yield$API$searchBook.data;\n            return _context.abrupt(\"return\", {\n              books: _toConsumableArray(data)\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function search(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar bookReducer = function bookReducer(state, action) {\n  switch (action.type) {\n    case \"search\":\n      return search(action.query, action.index);\n\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;","map":{"version":3,"sources":["C:/Users/Damian/Documents/WebDev Practice/React_Books_Search/client/src/hooks/bookReducer.js"],"names":["API","search","query","index","searchBook","data","books","bookReducer","state","action","type"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,cAAhB;;AAEA,IAAMC,MAAM;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,KAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUH,GAAG,CAACI,UAAJ,CAAeF,KAAf,EAAsBC,KAAtB,CADV;;AAAA;AAAA;AACJE,YAAAA,IADI,yBACJA,IADI;AAAA,6CAGJ;AAACC,cAAAA,KAAK,qBAAMD,IAAN;AAAN,aAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANJ,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAMA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AAAe,aAAOT,MAAM,CAACQ,MAAM,CAACP,KAAR,EAAeO,MAAM,CAACN,KAAtB,CAAb;;AACf;AAAS,aAAOK,KAAP;AAFb;AAIH,CALD;;AAOA,eAAeD,WAAf","sourcesContent":["import API from \"../utils/API\";\r\n\r\nconst search = async (query, index) => {\r\n    const {data} = await API.searchBook(query, index);\r\n\r\n    return {books: [...data]};\r\n};\r\n\r\nconst bookReducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"search\": return search(action.query, action.index)\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default bookReducer;"]},"metadata":{},"sourceType":"module"}